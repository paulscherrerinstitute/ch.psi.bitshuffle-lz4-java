apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8

version = '1.0.1'

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://artifacts.psi.ch/artifactory/libs-snapshots-local"){
            	authentication(userName: "upload", password: "{DESede}eWKHxAtQ2Dc=")
            }
            pom.groupId = 'ch.psi'
            pom.artifactId = 'bitshuffle-lz4'
        }
    }
}



task makeHeaders {
  def nativeHeadersDir = file("src/jni")
  def outputFile = file("$nativeHeadersDir/ch_psi_bitshuffle_BitShuffleLZ4JNI.h")
  inputs.files sourceSets.main.output
  outputs.file outputFile
  doLast {
    outputFile.parentFile.mkdirs()
    exec {
      executable org.gradle.internal.jvm.Jvm.current().getExecutable('javah')
        args '-o', outputFile
        args '-classpath', sourceSets.main.output.classesDir
        args 'ch.psi.bitshuffle.BitShuffleLZ4JNI'
    }
  }
}

task compileC{


  def home = System.properties.'java.home'
  def osName = System.getProperty("os.name")
  def osArch = System.getProperty("os.arch")

  if (osName.contains("Linux")) {
      osName = 'linux'
  } else if (osName.contains("Mac")) {
      osName = 'darwin'
  } else if (osName.contains("Windows")) {
      osName = 'windows'
  }

  println(osArch)
  println(osName)

  exec {
    executable 'gcc'
    args  '-prebind',
          '-dynamiclib',
          '-I', "${home}/../include/darwin",
          '-I', "${home}/../include",
          '-I', 'build/jni-headers/',
          '-I', 'src/bitshuffle/lz4',
          '-I', 'src/bitshuffle/src',
          '-o', "src/main/resources/${osName}/${osArch}/libbitshuffle-lz4-java.dylib",
          'src/bitshuffle/lz4/lz4.c',
          'src/bitshuffle/src/bitshuffle.c',
          'src/jni/ch_psi_bitshuffle_lz4_JNI.c'
  }
}
